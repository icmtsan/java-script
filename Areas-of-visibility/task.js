//1

let funFunc = () => {
    var functionVar = "Я внутри функции!";
    console.log(functionVar);
  }
  funFunc();
  console.log(functionVar);

  //Переменная была заведена внутри функции, чтобы ее вывести она должна существовать и на глобальном уровне

//2

let a = 100;
if (a === 100) {
    let b = 101;
    console.log(b);
}

console.log(b);

//Как и в первом случае она не глобальная в отличае от a, поэтому с ней можно работать только внутри

//3

//Это когда мы поднимаем функцию или переменную вверх. По сути пытаясь чтобы это все выполнялось первее чем сам код,
//Нормально это работает только с функциями онаписанными через классический синтаксис, если функцию засовывать в переменную, то ничего работать не будет.
//Как и в целом со всеми перменными const/let/var, только var будет выдавать undefind в отличае от остальных

sayHello();

function sayHello() {
  console.log("Hello!");
}

sayHello2();

const sayHello2 = () => {
  console.log("Hello!");
}